# Default values for config-server.
# Overridden by the parent chart (petclinic-umbrella) or --set flags.

replicaCount: 1

image:
  repository: "" # Template constructs this: <global.dockerHubUser>/spring-petclinic-config-server
  pullPolicy: IfNotPresent
  tag: "" # Default tag managed by the parent chart/deployment command

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  # --- Set correct default service type and port ---
  type: ClusterIP # Internal service, not usually exposed directly
  port: 8888     # Default port for config-server

ingress:
  enabled: false

# Default resource requests and limits for this service.
# {} uses global values from umbrella chart by default.
resources: {}
  # limits:
  #   memory: 512Mi
  # requests:
  #   memory: 256Mi
  #   cpu: 100m

autoscaling:
  enabled: false

# Liveness and Readiness Probes using Spring Boot Actuator
# Note: Config server might have a different health endpoint structure initially,
# but actuator/health should become available once it reads config. Adjust if needed.
probes:
  liveness:
    enabled: true
    # Check if the process is listening on the 'http' port
    tcpSocket:
      port: http # This name refers to the containerPort name in deployment.yaml
    initialDelaySeconds: 45 # Keep slightly longer delay
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readiness:
    enabled: true
    # Check if the process is listening on the 'http' port
    tcpSocket:
      port: http # This name refers to the containerPort name in deployment.yaml
    initialDelaySeconds: 25 # Keep slightly longer delay
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# Environment variables specific to this service (if any)
env: []

nodeSelector: {}
tolerations: []
affinity: {}